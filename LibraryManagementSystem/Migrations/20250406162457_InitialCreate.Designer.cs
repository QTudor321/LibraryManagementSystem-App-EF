// <auto-generated />
using System;
using LibraryManagementSystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.Migrations
{
    [DbContext(typeof(LibraryDatabaseContext))]
    [Migration("20250406162457_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementSystem.Entities.Books", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookID"));

                    b.Property<string>("author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("copies")
                        .HasColumnType("int");

                    b.Property<string>("identifier")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("theme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("bookID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Cards", b =>
                {
                    b.Property<int>("cardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cardID"));

                    b.Property<decimal>("credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("cardID");

                    b.HasIndex("userID");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Loans", b =>
                {
                    b.Property<int>("loanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loanID"));

                    b.Property<int>("bookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("duedate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("loandate")
                        .HasColumnType("datetime2");

                    b.Property<string>("loanstatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("returndate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("loanID");

                    b.HasIndex("bookID");

                    b.HasIndex("userID");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Logs", b =>
                {
                    b.Property<int>("logID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("logID"));

                    b.Property<string>("descriptionlog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventtype")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("registertime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("logID");

                    b.HasIndex("userID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Users", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("subscriptionstatus")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Cards", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.Users", "Users")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Loans", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.Books", "Books")
                        .WithMany()
                        .HasForeignKey("bookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.Entities.Users", "Users")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Logs", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.Users", "Users")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
